

name: Build Gitblit 


on:
  workflow_dispatch:
  push:

env:
  GH_ORG: fzs
  GH_UPSTREAM_ORG: flaix
  GITBLIT_VERSION: 1.9.2


jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      gitblit_version: ${{ steps.sha.outputs.version }}
      gitblit_sha: ${{ steps.sha.outputs.sha }}
    steps:

      - name: Check environment
        env:
          GITHUB_CTX_ENV: ${{ toJSON(env) }}
        run: |
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_RFE: $GITHUB_REF"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
          echo "Event context:"
          echo "$GITHUB_CTX_ENV"


      - name: Dump event payload
        env:
          GITHUB_CONTEXT_EVENT: ${{ toJSON(github.event) }}
        run: |
          echo "Action event name: ${{ github.event_name }}"
          echo "$GITHUB_CONTEXT_EVENT"

      - name: Get user from event
        id: get-userid
        run: |
          echo "Event sender: ${{github.event.sender.login}}"
          if [ ${{github.event_name}} == "push" ] ; then
            echo "REL_USER=${{ github.event.pusher.name }}" >> $GITHUB_ENV
            echo "REL_USER_EMAIL=${{ github.event.pusher.email }}" >> $GITHUB_ENV
            echo "::set-output name=userid::${{ github.event.pusher.name }}"
            echo "::set-output name=alt_name::${{ github.event.pusher.name }}"
            echo "::set-output name=alt_email::${{ github.event.pusher.email }}"

          elif [ ${{github.event_name}} == "workflow_dispatch" ] ; then
            echo "REL_USER=${{github.event.sender.login}}" >> $GITHUB_ENV
            echo "::set-output name=userid::${{github.event.sender.login}}"
            echo "::set-output name=alt_name::${{ github.event.pusher.name }}"
            echo "::set-output name=alt_email::2362065+flaix@users.noreply.github.com"

          else
            echo "::set-output name=alt_name::flaix"
            echo "::set-output name=alt_email::2362065+flaix@users.noreply.github.com"
          fi


      - name: Checkout upstream repo
        uses: actions/checkout@v2
        with:
          path: gitblit
          repository: ${{ env.GH_ORG }}/gitblit

      - name: Fetch all remote branches
        working-directory: gitblit
        run: |
          git fetch --prune --depth=20 origin +refs/heads/*:refs/remotes/origin/*


      - name: Find out Git user
        id: get-git-props
        working-directory: gitblit
        uses: flaix/set-git-user-action@master
        with:
          userid: ${{ steps.get-userid.outputs.userid }}
          alt_name: ${{ steps.get-userid.outputs.alt_name }}
          alt_email: ${{ steps.get-userid.outputs.alt_email }}


      - name: Record Git user
        working-directory: gitblit
        run: |
          user_name="${{ steps.get-git-props.outputs.name }}"
          user_email="${{ steps.get-git-props.outputs.email }}"
          
          echo "REL_USER_NAME=${user_name}"
          echo "REL_USER_NAME=${user_name}" >> $GITHUB_ENV
          echo "REL_USER_EMAIL=${user_email}"
          echo "REL_USER_EMAIL=${user_email}" >> $GITHUB_ENV

          echo "REL_USER='${{ steps.get-userid.outputs.userid }}'" >> ../relinfo.sh
          echo "REL_USER_NAME='${user_name}'" >> ../relinfo.sh
          echo "REL_USER_EMAIL=${user_email}" >> ../relinfo.sh


      - name: Get SHA
        id: sha
        working-directory: gitblit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:  |
          gh release download --repo ${GH_ORG}/gitblit v${GITBLIT_VERSION} --pattern 'gitblit-*.tar.gz' --dir gitblit-GO
          sha256sum gitblit-GO/gitblit-${GITBLIT_VERSION}.tar.gz
          sha=$(sha256sum gitblit-GO/gitblit-${GITBLIT_VERSION}.tar.gz | cut -f1 -d' ')
          echo "SHA=$sha" >> ../relinfo.sh

          cat ../relinfo.sh

          echo "::set-output name=sha::$sha"
          echo "::set-output name=version::$GITBLIT_VERSION"
          

      - name: Upload release info
        uses: actions/upload-artifact@v2
        with:
          name: release-info
          path: |
            relinfo.sh



  call_workflow:
    uses: fzs/test_workflows/.github/workflows/called_wf.yaml@main
    needs: build
    with:
      foo: ${{ needs.build.outputs.gitblit_sha }}


  gitblit_docker:
    uses: fzs/test_workflows/.github/workflows/called_wf.yaml@main
    needs: [ build, call_workflow ]
    with:
      gitblit_version: ${{ needs.build.outputs.gitblit_version }}
      gitblit_sha: ${{ needs.build.outputs.gitblit_sha }}
